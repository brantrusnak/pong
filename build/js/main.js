!function(t){var e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(i,o,function(e){return t[e]}.bind(null,o));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s="./src/main.ts")}({"./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no static exports found */function(t,e){let n,i,o=10,r=100,l=0,f=0,u=0,c=0,a={X:0,Y:0,radius:5,VX:16,VY:0};function h(t){t.clientY-r/2>0&&t.clientY+r/2<n.height&&(l=t.clientY-r/2)}function d(){i.clearRect(0,0,n.width,n.height),function(){if(a.X+=a.VX,a.Y+=a.VY,function(){a.Y-r/2>0&&a.Y+r/2<n.height&&(f=a.Y-r/2)}(),a.X-o<0)if(a.Y>=l&&a.Y<l+r){const t=l-a.Y;a.VY+=-.1*t,a.VX=-a.VX}else c++,Y();if(a.X+o>n.width)if(a.Y>=f&&a.Y<f+r){const t=f-a.Y;a.VY+=-.1*t,a.VX=-a.VX}else u++,Y();a.Y<0&&(a.VY=-a.VY);a.Y>n.height&&(a.VY=-a.VY)}(),s(0,l+r/2),s(n.width-o,f+r/2),i.beginPath(),i.strokeStyle="#fff",i.lineWidth=10,i.setLineDash([10,70]),i.moveTo(n.width/2,0),i.lineTo(n.width/2,n.height),i.stroke(),i.beginPath(),i.fillStyle="#fff",i.arc(a.X,a.Y,a.radius,0,2*Math.PI),i.fill(),i.fillStyle="#fff",i.font="72px 'Press Start 2P'",i.textBaseline="top",i.fillText(u.toString(),.25*n.width,10),i.fillText(c.toString(),.75*n.width,10),requestAnimationFrame(d)}function s(t,e){i.beginPath(),i.fillStyle="#fff",i.fillRect(t,e-r/2,o,r),i.fill()}function Y(){a.VX=16,a.VY=0,a.X=n.width/2,a.Y=n.height/2}window.onload=()=>{n=document.getElementById("game"),n.width=window.innerWidth-10,n.height=window.innerHeight-10,n.onmousemove=h,l=n.height/2,a.X=n.width/2,a.Y=n.height/2,f=a.Y,i=n.getContext("2d"),i.globalAlpha=5,d()}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,